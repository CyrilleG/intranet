// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package intranet.controllers;

import intranet.Action;
import intranet.Fields;
import intranet.Filter;
import intranet.Group;
import intranet.GroupFilter;
import intranet.GroupRights;
import intranet.Module;
import intranet.ModuleAccess;
import intranet.Objects;
import intranet.Privacity;
import intranet.Right;
import intranet.Session;
import intranet.User;
import intranet.UserFilters;
import intranet.UserGroups;
import intranet.UserInfo;
import intranet.UserRights;
import intranet.controllers.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Action, String> ApplicationConversionServiceFactoryBean.getActionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<intranet.Action, java.lang.String>() {
            public String convert(Action action) {
                return new StringBuilder().append(action.getMethod()).append(" ").append(action.getTemplate()).toString();
            }
        };
    }
    
    public Converter<Integer, Action> ApplicationConversionServiceFactoryBean.getIdToActionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, intranet.Action>() {
            public intranet.Action convert(java.lang.Integer id) {
                return Action.findAction(id);
            }
        };
    }
    
    public Converter<String, Action> ApplicationConversionServiceFactoryBean.getStringToActionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, intranet.Action>() {
            public intranet.Action convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Action.class);
            }
        };
    }
    
    public Converter<Fields, String> ApplicationConversionServiceFactoryBean.getFieldsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<intranet.Fields, java.lang.String>() {
            public String convert(Fields fields) {
                return new StringBuilder().append(fields.getName()).append(" ").append(fields.getValue()).toString();
            }
        };
    }
    
    public Converter<Integer, Fields> ApplicationConversionServiceFactoryBean.getIdToFieldsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, intranet.Fields>() {
            public intranet.Fields convert(java.lang.Integer id) {
                return Fields.findFields(id);
            }
        };
    }
    
    public Converter<String, Fields> ApplicationConversionServiceFactoryBean.getStringToFieldsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, intranet.Fields>() {
            public intranet.Fields convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Fields.class);
            }
        };
    }
    
    public Converter<Filter, String> ApplicationConversionServiceFactoryBean.getFilterToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<intranet.Filter, java.lang.String>() {
            public String convert(Filter filter) {
                return new StringBuilder().append(filter.getName()).append(" ").append(filter.getDescription()).append(" ").append(filter.getClass1()).toString();
            }
        };
    }
    
    public Converter<Integer, Filter> ApplicationConversionServiceFactoryBean.getIdToFilterConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, intranet.Filter>() {
            public intranet.Filter convert(java.lang.Integer id) {
                return Filter.findFilter(id);
            }
        };
    }
    
    public Converter<String, Filter> ApplicationConversionServiceFactoryBean.getStringToFilterConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, intranet.Filter>() {
            public intranet.Filter convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Filter.class);
            }
        };
    }
    
    public Converter<Group, String> ApplicationConversionServiceFactoryBean.getGroupToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<intranet.Group, java.lang.String>() {
            public String convert(Group group) {
                return new StringBuilder().append(group.getName()).append(" ").append(group.getDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, Group> ApplicationConversionServiceFactoryBean.getIdToGroupConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, intranet.Group>() {
            public intranet.Group convert(java.lang.Integer id) {
                return Group.findGroup(id);
            }
        };
    }
    
    public Converter<String, Group> ApplicationConversionServiceFactoryBean.getStringToGroupConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, intranet.Group>() {
            public intranet.Group convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Group.class);
            }
        };
    }
    
    public Converter<GroupFilter, String> ApplicationConversionServiceFactoryBean.getGroupFilterToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<intranet.GroupFilter, java.lang.String>() {
            public String convert(GroupFilter groupFilter) {
                return new StringBuilder().toString();
            }
        };
    }
    
    public Converter<Integer, GroupFilter> ApplicationConversionServiceFactoryBean.getIdToGroupFilterConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, intranet.GroupFilter>() {
            public intranet.GroupFilter convert(java.lang.Integer id) {
                return GroupFilter.findGroupFilter(id);
            }
        };
    }
    
    public Converter<String, GroupFilter> ApplicationConversionServiceFactoryBean.getStringToGroupFilterConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, intranet.GroupFilter>() {
            public intranet.GroupFilter convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), GroupFilter.class);
            }
        };
    }
    
    public Converter<GroupRights, String> ApplicationConversionServiceFactoryBean.getGroupRightsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<intranet.GroupRights, java.lang.String>() {
            public String convert(GroupRights groupRights) {
                return new StringBuilder().toString();
            }
        };
    }
    
    public Converter<Integer, GroupRights> ApplicationConversionServiceFactoryBean.getIdToGroupRightsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, intranet.GroupRights>() {
            public intranet.GroupRights convert(java.lang.Integer id) {
                return GroupRights.findGroupRights(id);
            }
        };
    }
    
    public Converter<String, GroupRights> ApplicationConversionServiceFactoryBean.getStringToGroupRightsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, intranet.GroupRights>() {
            public intranet.GroupRights convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), GroupRights.class);
            }
        };
    }
    
    public Converter<Module, String> ApplicationConversionServiceFactoryBean.getModuleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<intranet.Module, java.lang.String>() {
            public String convert(Module module) {
                return new StringBuilder().append(module.getName()).append(" ").append(module.getDescription()).append(" ").append(module.getClass1()).toString();
            }
        };
    }
    
    public Converter<Integer, Module> ApplicationConversionServiceFactoryBean.getIdToModuleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, intranet.Module>() {
            public intranet.Module convert(java.lang.Integer id) {
                return Module.findModule(id);
            }
        };
    }
    
    public Converter<String, Module> ApplicationConversionServiceFactoryBean.getStringToModuleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, intranet.Module>() {
            public intranet.Module convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Module.class);
            }
        };
    }
    
    public Converter<ModuleAccess, String> ApplicationConversionServiceFactoryBean.getModuleAccessToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<intranet.ModuleAccess, java.lang.String>() {
            public String convert(ModuleAccess moduleAccess) {
                return new StringBuilder().toString();
            }
        };
    }
    
    public Converter<Integer, ModuleAccess> ApplicationConversionServiceFactoryBean.getIdToModuleAccessConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, intranet.ModuleAccess>() {
            public intranet.ModuleAccess convert(java.lang.Integer id) {
                return ModuleAccess.findModuleAccess(id);
            }
        };
    }
    
    public Converter<String, ModuleAccess> ApplicationConversionServiceFactoryBean.getStringToModuleAccessConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, intranet.ModuleAccess>() {
            public intranet.ModuleAccess convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), ModuleAccess.class);
            }
        };
    }
    
    public Converter<Objects, String> ApplicationConversionServiceFactoryBean.getObjectsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<intranet.Objects, java.lang.String>() {
            public String convert(Objects objects) {
                return new StringBuilder().append(objects.getName()).toString();
            }
        };
    }
    
    public Converter<Integer, Objects> ApplicationConversionServiceFactoryBean.getIdToObjectsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, intranet.Objects>() {
            public intranet.Objects convert(java.lang.Integer id) {
                return Objects.findObjects(id);
            }
        };
    }
    
    public Converter<String, Objects> ApplicationConversionServiceFactoryBean.getStringToObjectsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, intranet.Objects>() {
            public intranet.Objects convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Objects.class);
            }
        };
    }
    
    public Converter<Privacity, String> ApplicationConversionServiceFactoryBean.getPrivacityToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<intranet.Privacity, java.lang.String>() {
            public String convert(Privacity privacity) {
                return new StringBuilder().toString();
            }
        };
    }
    
    public Converter<Integer, Privacity> ApplicationConversionServiceFactoryBean.getIdToPrivacityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, intranet.Privacity>() {
            public intranet.Privacity convert(java.lang.Integer id) {
                return Privacity.findPrivacity(id);
            }
        };
    }
    
    public Converter<String, Privacity> ApplicationConversionServiceFactoryBean.getStringToPrivacityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, intranet.Privacity>() {
            public intranet.Privacity convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Privacity.class);
            }
        };
    }
    
    public Converter<Right, String> ApplicationConversionServiceFactoryBean.getRightToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<intranet.Right, java.lang.String>() {
            public String convert(Right right) {
                return new StringBuilder().append(right.getIdent()).append(" ").append(right.getName()).append(" ").append(right.getDescription()).toString();
            }
        };
    }
    
    public Converter<Integer, Right> ApplicationConversionServiceFactoryBean.getIdToRightConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, intranet.Right>() {
            public intranet.Right convert(java.lang.Integer id) {
                return Right.findRight(id);
            }
        };
    }
    
    public Converter<String, Right> ApplicationConversionServiceFactoryBean.getStringToRightConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, intranet.Right>() {
            public intranet.Right convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), Right.class);
            }
        };
    }
    
    public Converter<Session, String> ApplicationConversionServiceFactoryBean.getSessionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<intranet.Session, java.lang.String>() {
            public String convert(Session session) {
                return new StringBuilder().append(session.getLoginDate()).append(" ").append(session.getLastAction()).toString();
            }
        };
    }
    
    public Converter<String, Session> ApplicationConversionServiceFactoryBean.getIdToSessionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, intranet.Session>() {
            public intranet.Session convert(java.lang.String id) {
                return Session.findSession(id);
            }
        };
    }
    
    public Converter<User, String> ApplicationConversionServiceFactoryBean.getUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<intranet.User, java.lang.String>() {
            public String convert(User user) {
                return new StringBuilder().append(user.getLogin()).append(" ").append(user.getPassword()).toString();
            }
        };
    }
    
    public Converter<Integer, User> ApplicationConversionServiceFactoryBean.getIdToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, intranet.User>() {
            public intranet.User convert(java.lang.Integer id) {
                return User.findUser(id);
            }
        };
    }
    
    public Converter<String, User> ApplicationConversionServiceFactoryBean.getStringToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, intranet.User>() {
            public intranet.User convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), User.class);
            }
        };
    }
    
    public Converter<UserFilters, String> ApplicationConversionServiceFactoryBean.getUserFiltersToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<intranet.UserFilters, java.lang.String>() {
            public String convert(UserFilters userFilters) {
                return new StringBuilder().toString();
            }
        };
    }
    
    public Converter<Integer, UserFilters> ApplicationConversionServiceFactoryBean.getIdToUserFiltersConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, intranet.UserFilters>() {
            public intranet.UserFilters convert(java.lang.Integer id) {
                return UserFilters.findUserFilters(id);
            }
        };
    }
    
    public Converter<String, UserFilters> ApplicationConversionServiceFactoryBean.getStringToUserFiltersConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, intranet.UserFilters>() {
            public intranet.UserFilters convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), UserFilters.class);
            }
        };
    }
    
    public Converter<UserGroups, String> ApplicationConversionServiceFactoryBean.getUserGroupsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<intranet.UserGroups, java.lang.String>() {
            public String convert(UserGroups userGroups) {
                return new StringBuilder().toString();
            }
        };
    }
    
    public Converter<Integer, UserGroups> ApplicationConversionServiceFactoryBean.getIdToUserGroupsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, intranet.UserGroups>() {
            public intranet.UserGroups convert(java.lang.Integer id) {
                return UserGroups.findUserGroups(id);
            }
        };
    }
    
    public Converter<String, UserGroups> ApplicationConversionServiceFactoryBean.getStringToUserGroupsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, intranet.UserGroups>() {
            public intranet.UserGroups convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), UserGroups.class);
            }
        };
    }
    
    public Converter<UserInfo, String> ApplicationConversionServiceFactoryBean.getUserInfoToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<intranet.UserInfo, java.lang.String>() {
            public String convert(UserInfo userInfo) {
                return new StringBuilder().append(userInfo.getKey()).append(" ").append(userInfo.getValue()).toString();
            }
        };
    }
    
    public Converter<Integer, UserInfo> ApplicationConversionServiceFactoryBean.getIdToUserInfoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, intranet.UserInfo>() {
            public intranet.UserInfo convert(java.lang.Integer id) {
                return UserInfo.findUserInfo(id);
            }
        };
    }
    
    public Converter<String, UserInfo> ApplicationConversionServiceFactoryBean.getStringToUserInfoConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, intranet.UserInfo>() {
            public intranet.UserInfo convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), UserInfo.class);
            }
        };
    }
    
    public Converter<UserRights, String> ApplicationConversionServiceFactoryBean.getUserRightsToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<intranet.UserRights, java.lang.String>() {
            public String convert(UserRights userRights) {
                return new StringBuilder().toString();
            }
        };
    }
    
    public Converter<Integer, UserRights> ApplicationConversionServiceFactoryBean.getIdToUserRightsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Integer, intranet.UserRights>() {
            public intranet.UserRights convert(java.lang.Integer id) {
                return UserRights.findUserRights(id);
            }
        };
    }
    
    public Converter<String, UserRights> ApplicationConversionServiceFactoryBean.getStringToUserRightsConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, intranet.UserRights>() {
            public intranet.UserRights convert(String id) {
                return getObject().convert(getObject().convert(id, Integer.class), UserRights.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getActionToStringConverter());
        registry.addConverter(getIdToActionConverter());
        registry.addConverter(getStringToActionConverter());
        registry.addConverter(getFieldsToStringConverter());
        registry.addConverter(getIdToFieldsConverter());
        registry.addConverter(getStringToFieldsConverter());
        registry.addConverter(getFilterToStringConverter());
        registry.addConverter(getIdToFilterConverter());
        registry.addConverter(getStringToFilterConverter());
        registry.addConverter(getGroupToStringConverter());
        registry.addConverter(getIdToGroupConverter());
        registry.addConverter(getStringToGroupConverter());
        registry.addConverter(getGroupFilterToStringConverter());
        registry.addConverter(getIdToGroupFilterConverter());
        registry.addConverter(getStringToGroupFilterConverter());
        registry.addConverter(getGroupRightsToStringConverter());
        registry.addConverter(getIdToGroupRightsConverter());
        registry.addConverter(getStringToGroupRightsConverter());
        registry.addConverter(getModuleToStringConverter());
        registry.addConverter(getIdToModuleConverter());
        registry.addConverter(getStringToModuleConverter());
        registry.addConverter(getModuleAccessToStringConverter());
        registry.addConverter(getIdToModuleAccessConverter());
        registry.addConverter(getStringToModuleAccessConverter());
        registry.addConverter(getObjectsToStringConverter());
        registry.addConverter(getIdToObjectsConverter());
        registry.addConverter(getStringToObjectsConverter());
        registry.addConverter(getPrivacityToStringConverter());
        registry.addConverter(getIdToPrivacityConverter());
        registry.addConverter(getStringToPrivacityConverter());
        registry.addConverter(getRightToStringConverter());
        registry.addConverter(getIdToRightConverter());
        registry.addConverter(getStringToRightConverter());
        registry.addConverter(getSessionToStringConverter());
        registry.addConverter(getIdToSessionConverter());
        registry.addConverter(getUserToStringConverter());
        registry.addConverter(getIdToUserConverter());
        registry.addConverter(getStringToUserConverter());
        registry.addConverter(getUserFiltersToStringConverter());
        registry.addConverter(getIdToUserFiltersConverter());
        registry.addConverter(getStringToUserFiltersConverter());
        registry.addConverter(getUserGroupsToStringConverter());
        registry.addConverter(getIdToUserGroupsConverter());
        registry.addConverter(getStringToUserGroupsConverter());
        registry.addConverter(getUserInfoToStringConverter());
        registry.addConverter(getIdToUserInfoConverter());
        registry.addConverter(getStringToUserInfoConverter());
        registry.addConverter(getUserRightsToStringConverter());
        registry.addConverter(getIdToUserRightsConverter());
        registry.addConverter(getStringToUserRightsConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
