// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package intranet;

import intranet.AppSession;
import intranet.AppSessionDataOnDemand;
import intranet.AppSessionIntegrationTest;
import java.util.List;
import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.transaction.annotation.Transactional;

privileged aspect AppSessionIntegrationTest_Roo_IntegrationTest {
    
    declare @type: AppSessionIntegrationTest: @RunWith(SpringJUnit4ClassRunner.class);
    
    declare @type: AppSessionIntegrationTest: @ContextConfiguration(locations = "classpath:/META-INF/spring/applicationContext*.xml");
    
    declare @type: AppSessionIntegrationTest: @Transactional;
    
    @Autowired
    private AppSessionDataOnDemand AppSessionIntegrationTest.dod;
    
    @Test
    public void AppSessionIntegrationTest.testCountAppSessions() {
        Assert.assertNotNull("Data on demand for 'AppSession' failed to initialize correctly", dod.getRandomAppSession());
        long count = AppSession.countAppSessions();
        Assert.assertTrue("Counter for 'AppSession' incorrectly reported there were no entries", count > 0);
    }
    
    @Test
    public void AppSessionIntegrationTest.testFindAppSession() {
        AppSession obj = dod.getRandomAppSession();
        Assert.assertNotNull("Data on demand for 'AppSession' failed to initialize correctly", obj);
        String id = obj.getSession();
        Assert.assertNotNull("Data on demand for 'AppSession' failed to provide an identifier", id);
        obj = AppSession.findAppSession(id);
        Assert.assertNotNull("Find method for 'AppSession' illegally returned null for id '" + id + "'", obj);
        Assert.assertEquals("Find method for 'AppSession' returned the incorrect identifier", id, obj.getSession());
    }
    
    @Test
    public void AppSessionIntegrationTest.testFindAllAppSessions() {
        Assert.assertNotNull("Data on demand for 'AppSession' failed to initialize correctly", dod.getRandomAppSession());
        long count = AppSession.countAppSessions();
        Assert.assertTrue("Too expensive to perform a find all test for 'AppSession', as there are " + count + " entries; set the findAllMaximum to exceed this value or set findAll=false on the integration test annotation to disable the test", count < 250);
        List<AppSession> result = AppSession.findAllAppSessions();
        Assert.assertNotNull("Find all method for 'AppSession' illegally returned null", result);
        Assert.assertTrue("Find all method for 'AppSession' failed to return any data", result.size() > 0);
    }
    
    @Test
    public void AppSessionIntegrationTest.testFindAppSessionEntries() {
        Assert.assertNotNull("Data on demand for 'AppSession' failed to initialize correctly", dod.getRandomAppSession());
        long count = AppSession.countAppSessions();
        if (count > 20) count = 20;
        int firstResult = 0;
        int maxResults = (int) count;
        List<AppSession> result = AppSession.findAppSessionEntries(firstResult, maxResults);
        Assert.assertNotNull("Find entries method for 'AppSession' illegally returned null", result);
        Assert.assertEquals("Find entries method for 'AppSession' returned an incorrect number of entries", count, result.size());
    }
    
    @Test
    public void AppSessionIntegrationTest.testPersist() {
        Assert.assertNotNull("Data on demand for 'AppSession' failed to initialize correctly", dod.getRandomAppSession());
        AppSession obj = dod.getNewTransientAppSession(Integer.MAX_VALUE);
        Assert.assertNotNull("Data on demand for 'AppSession' failed to provide a new transient entity", obj);
        Assert.assertNull("Expected 'AppSession' identifier to be null", obj.getSession());
        obj.persist();
        obj.flush();
        Assert.assertNotNull("Expected 'AppSession' identifier to no longer be null", obj.getSession());
    }
    
    @Test
    public void AppSessionIntegrationTest.testRemove() {
        AppSession obj = dod.getRandomAppSession();
        Assert.assertNotNull("Data on demand for 'AppSession' failed to initialize correctly", obj);
        String id = obj.getSession();
        Assert.assertNotNull("Data on demand for 'AppSession' failed to provide an identifier", id);
        obj = AppSession.findAppSession(id);
        obj.remove();
        obj.flush();
        Assert.assertNull("Failed to remove 'AppSession' with identifier '" + id + "'", AppSession.findAppSession(id));
    }
    
}
